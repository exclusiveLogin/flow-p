SocketCL init
PLC connected
startOPC
client connected to server
SQLRelease:connection not found
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB not empty rows on tube 2:288
promise end:{ tube: [33m2[39m, len: [33m288[39m }
set replicator for tube:2
DB not empty rows on tube 3:288
promise end:{ tube: [33m3[39m, len: [33m288[39m }
set replicator for tube:3
DB not empty rows on tube 4:288
promise end:{ tube: [33m4[39m, len: [33m288[39m }
set replicator for tube:4
send replica for tube:3
send replica for tube:2
send replica for tube:4
data free where utc < 1489385762474  on tube:4
send replica for tube:4
data free where utc < 1489385762922  on tube:4
data free where utc < 1489385762539  on tube:3
send replica for tube:3
data free where utc < 1489385762666  on tube:3
data free where utc < 1489385762666  on tube:2
send replica for tube:2
data free where utc < 1489385762859  on tube:2
client Front End connected
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
stop OPC
SQLRelease:connection not found
Register SQL local success
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
PLC connected
startOPC
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
connect to server error
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB not empty rows on tube 1:1432
promise end:{ tube: [33m1[39m, len: [33m1432[39m }
set replicator for tube:1
send replica for tube:1
DB not empty rows on tube 3:1432
promise end:{ tube: [33m3[39m, len: [33m1432[39m }
set replicator for tube:3
DB not empty rows on tube 2:1432
promise end:{ tube: [33m2[39m, len: [33m1432[39m }
set replicator for tube:2
DB not empty rows on tube 4:1432
promise end:{ tube: [33m4[39m, len: [33m1432[39m }
set replicator for tube:4
send replica for tube:3
send replica for tube:2
send replica for tube:4
data free where utc < 1489389170822  on tube:1
data free where utc < 1489389170886  on tube:2
data free where utc < 1489389170760  on tube:4
data free where utc < 1489389171206  on tube:3
send replica for tube:1
send replica for tube:3
send replica for tube:2
send replica for tube:4
data free where utc < 1489389308891  on tube:1
send replica for tube:1
data free where utc < 1489389309019  on tube:2
data free where utc < 1489389309274  on tube:3
data free where utc < 1489389308829  on tube:4
send replica for tube:4
data free where utc < 1489389309019  on tube:1
data free where utc < 1489389309019  on tube:4
client Front End connected
client Front End connected
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
client Front End connected
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
client Front End connected
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
PLC connected
startOPC
client connected to server
SQLRelease:connection not found
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
connect to server error
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
connect to server error
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
connect to server error
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
PLC connected
startOPC
stop OPC
SQLRelease:connection not found
Register SQL local success
client connected to server
local SQL connection reset
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
PLC connected
startOPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
client Front End connected
client Front End connected
client Front End connected
client Front End connected
client Front End connected
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
client Front End connected
client Front End connected
client Front End connected
client Front End connected
client Front End connected
client Front End connected
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
client Front End connected
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
client Front End connected
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
{ err: 'timeout' }
stop OPC
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
connect to server error
connect to server error
ERROR MODBUS
{ Error: connect EHOSTUNREACH 10.210.30.214:502
    at Object.exports._errnoException (util.js:1012:11)
    at exports._exceptionWithHostPort (util.js:1035:20)
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1080:14)
  code: 'EHOSTUNREACH',
  errno: 'EHOSTUNREACH',
  syscall: 'connect',
  address: '10.210.30.214',
  port: 502 }
stop OPC
client connected to server
SQLRelease:connection not found
PLC connected
startOPC
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
WTD ping
check DB
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
generator:{ value: Promise { <pending> }, done: [33mfalse[39m }
Ð’ÐµÑˆÐ°ÐµÐ¼ then
DB empty tube 1
promise end:{ tube: [33m1[39m }
DB empty tube 2
promise end:{ tube: [33m2[39m }
DB empty tube 3
promise end:{ tube: [33m3[39m }
DB empty tube 4
promise end:{ tube: [33m4[39m }
